<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by WebGain Javadoc 3.10.6.113 on Mon Dec 31 13:20:39 2001 -->
<a name="_top_"></a>
<title>
  Class com.heaton.bot.SpiderWorker
</title>
</head>
<body>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-com.heaton.bot.html">This Package</a>  <a href="com.heaton.bot.SpiderSQLWorkload.html#_top_">Previous</a>  <a href="com.heaton.bot.URLUtility.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
<hr>
<h1>
  Class com.heaton.bot.SpiderWorker
</h1>
<pre>
Object
   |
   +----Thread
           |
           +----com.heaton.bot.SpiderWorker
</pre>
<hr>
<dl>
  <dt> public class <b>SpiderWorker</b>
  <dt> extends Thread
</dl>
The SpiderWorker class performs the actual work of
 spidering pages.  It is implemented as a thread
 that is created by the spider class.

 Copyright 2001 by Jeff Heaton<p>
<dl>
  <dt> <b>Version:</b>
  <dd> 1.0
  <dt> <b>Author:</b>
  <dd> Jeff Heaton
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/variable-index.gif" width=207 height=38 alt="Variable Index">
</h2>
<dl>
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#_busy"><b>_busy</b></a>
  <dd>  Indicates if the spider is busy or not.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#_http"><b>_http</b></a>
  <dd>  A descendant of the HTTP object that
 this class should be using for HTTP
 communication.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#_owner"><b>_owner</b></a>
  <dd>  The owner of this spider worker class,
 should always be a Spider object.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#_target"><b>_target</b></a>
  <dd>  The URL that this spider worker
 should be downloading.
</dl>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#SpiderWorker(com.heaton.bot.Spider, com.heaton.bot.HTTP)"><b>com.heaton.bot.SpiderWorker</b></a>(Spider, HTTP)
  <dd>  Constructs a spider worker object.
</dl>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getHTTP()"><b>getHTTP</b></a>()
  <dd>  Returns the HTTP descendant that this
 object should use for all HTTP communication.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isBusy()"><b>isBusy</b></a>()
  <dd>  Returns true of false to indicate if
 the spider is busy or idle.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#processWorkload()"><b>processWorkload</b></a>()
  <dd>   <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#run()"><b>run</b></a>()
  <dd>  The run method causes this thread to go idle
 and wait for a workload.
</dl>
<a name="variables"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/variables.gif" width=153 height=38 alt="Variables">
</h2>
<a name="_busy"><img src="/C:/VisualCafeXE/java/docs/images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>_busy</b>
<pre>
protected boolean _busy
</pre>
<dl>
  <dd> Indicates if the spider is busy or not.
 true = busy
 false = idle<p>
</dl>
<a name="_http"><img src="/C:/VisualCafeXE/java/docs/images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>_http</b>
<pre>
protected com.heaton.bot.HTTP _http
</pre>
<dl>
  <dd> A descendant of the HTTP object that
 this class should be using for HTTP
 communication. This is usually the
 HTTPSocket class.<p>
</dl>
<a name="_owner"><img src="/C:/VisualCafeXE/java/docs/images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>_owner</b>
<pre>
protected com.heaton.bot.Spider _owner
</pre>
<dl>
  <dd> The owner of this spider worker class,
 should always be a Spider object.
 This is the class that this spider
 worker will send its data to.<p>
</dl>
<a name="_target"><img src="/C:/VisualCafeXE/java/docs/images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>_target</b>
<pre>
protected java.lang.String _target
</pre>
<dl>
  <dd> The URL that this spider worker
 should be downloading.<p>
</dl>
<a name="constructors"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="SpiderWorker"></a>
<a name="SpiderWorker(com.heaton.bot.Spider, com.heaton.bot.HTTP)"><img src="/C:/VisualCafeXE/java/docs/images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>SpiderWorker</b>
<pre>
public SpiderWorker(<a href="com.heaton.bot.Spider.html#_top_">Spider</a> owner,
                    <a href="com.heaton.bot.HTTP.html#_top_">HTTP</a> http)
</pre>
<dl>
  <dd> Constructs a spider worker object.
  <p> 
 <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> owner - The owner of this object, usually
 a Spider object.
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="getHTTP()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getHTTP"><b>getHTTP</b></a>
<pre>
public com.heaton.bot.HTTP getHTTP()
</pre>
<dl>
  <dd> Returns the HTTP descendant that this
 object should use for all HTTP communication.
  <p> 
 <dd><dl>
    <dt> <b>Returns:</b>
    <dd> An HTTP descendant object.
  </dl></dd>
</dl>
<a name="isBusy()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isBusy"><b>isBusy</b></a>
<pre>
public boolean isBusy()
</pre>
<dl>
  <dd> Returns true of false to indicate if
 the spider is busy or idle.
  <p> 
 <dd><dl>
    <dt> <b>Returns:</b>
    <dd> true = busy
 false = idle
  </dl></dd>
</dl>
<a name="processWorkload()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="processWorkload"><b>processWorkload</b></a>
<pre>
protected void processWorkload()
</pre>
<a name="run()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="run"><b>run</b></a>
<pre>
public void run()
</pre>
<dl>
  <dd> The run method causes this thread to go idle
 and wait for a workload. Once a workload is
 received, the processWorkload method is called
 to handle the workload.
  <p> 
 <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> run in class Thread
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-com.heaton.bot.html">This Package</a>  <a href="com.heaton.bot.SpiderSQLWorkload.html#_top_">Previous</a>  <a href="com.heaton.bot.URLUtility.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
</body>
</html>
