<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by WebGain Javadoc 3.10.6.113 on Mon Dec 31 13:20:39 2001 -->
<a name="_top_"></a>
<title>
  Class com.heaton.bot.SpiderInternalWorkload
</title>
</head>
<body>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-com.heaton.bot.html">This Package</a>  <a href="com.heaton.bot.Spider.html#_top_">Previous</a>  <a href="com.heaton.bot.SpiderSQLWorkload.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
<hr>
<h1>
  Class com.heaton.bot.SpiderInternalWorkload
</h1>
<pre>
Object
   |
   +----com.heaton.bot.SpiderInternalWorkload
</pre>
<hr>
<dl>
  <dt> public class <b>SpiderInternalWorkload</b>
  <dt> extends Object
  <dt> implements <a href="com.heaton.bot.IWorkloadStorable.html#_top_">IWorkloadStorable</a></dl>
This class is used to maintain an internal,
 memory based workload store for a spider. This
 workload store will be used by default, if no
 other is specified.

 Copyright 2001 by Jeff Heaton<p>
<dl>
  <dt> <b>Version:</b>
  <dd> 1.0
  <dt> <b>Author:</b>
  <dd> Jeff Heaton
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#SpiderInternalWorkload()"><b>com.heaton.bot.SpiderInternalWorkload</b></a>()
  <dd> </dl>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#addWorkload(java.lang.String)"><b>addWorkload</b></a>(String)
  <dd>  Add a new URL to the workload, and
 assign it a status of WAITING.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#assignWorkload()"><b>assignWorkload</b></a>()
  <dd>  Call this method to request a URL
 to process.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#clear()"><b>clear</b></a>()
  <dd>  Clear the contents of the workload store.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#completeWorkload(java.lang.String, boolean)"><b>completeWorkload</b></a>(String, boolean)
  <dd>  Called to mark this URL as either
 COMPLETE or ERROR.
  <dt> <img src="/C:/VisualCafeXE/java/docs/images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getURLStatus(java.lang.String)"><b>getURLStatus</b></a>(String)
  <dd>  Get the status of a URL.
</dl>
<a name="constructors"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="SpiderInternalWorkload"></a>
<a name="SpiderInternalWorkload()"><img src="/C:/VisualCafeXE/java/docs/images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>SpiderInternalWorkload</b>
<pre>
public SpiderInternalWorkload()
</pre>
<a name="methods"></a>
<h2>
  <img src="/C:/VisualCafeXE/java/docs/images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="addWorkload(java.lang.String)"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="addWorkload"><b>addWorkload</b></a>
<pre>
public synchronized void addWorkload(String url)
</pre>
<dl>
  <dd> Add a new URL to the workload, and
 assign it a status of WAITING.
  <p> 
 <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> url - The URL to be added.
  </dl></dd>
</dl>
<a name="assignWorkload()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="assignWorkload"><b>assignWorkload</b></a>
<pre>
public synchronized java.lang.String assignWorkload()
</pre>
<dl>
  <dd> Call this method to request a URL
 to process. This method will return
 a WAITING URL and mark it as RUNNING.
  <p> 
 <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The URL that was assigned.
  </dl></dd>
</dl>
<a name="clear()"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="clear"><b>clear</b></a>
<pre>
public synchronized void clear()
</pre>
<dl>
  <dd> Clear the contents of the workload store.
  <p> 
</dl>
<a name="completeWorkload(java.lang.String, boolean)"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="completeWorkload"><b>completeWorkload</b></a>
<pre>
public synchronized void completeWorkload(String url,
                                          boolean error)
</pre>
<dl>
  <dd> Called to mark this URL as either
 COMPLETE or ERROR.
  <p> 
 <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> url - The URL to complete.
    <dd> error - true - assign this workload a status of ERROR.
 false - assign this workload a status of COMPLETE.
  </dl></dd>
</dl>
<a name="getURLStatus(java.lang.String)"><img src="/C:/VisualCafeXE/java/docs/images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getURLStatus"><b>getURLStatus</b></a>
<pre>
public synchronized char getURLStatus(String url)
</pre>
<dl>
  <dd> Get the status of a URL.
  <p> 
 <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> url - Returns either RUNNING, ERROR
 WAITING, or COMPLETE. If the URL
 does not exist in the database,
 the value of UNKNOWN is returned.
    <dt> <b>Returns:</b>
    <dd> Returns either RUNNING,ERROR,
 WAITING,COMPLETE or UNKNOWN.
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-com.heaton.bot.html">This Package</a>  <a href="com.heaton.bot.Spider.html#_top_">Previous</a>  <a href="com.heaton.bot.SpiderSQLWorkload.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
</body>
</html>
